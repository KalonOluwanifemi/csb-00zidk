{"version":3,"sources":["App.js","index.js"],"names":["App","useState","input","setInput","plusMinus","e","concat","target","value","numValue","innerText","numPercent","startsWith","numMultiply","toString","calculation","eval","error","allClear","backSpace","slice","className","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"y3BAGA,SAASA,MACP,cAA0BC,oDAAS,IAAG,gNAA/BC,MAAK,cAAEC,SAAQ,cAGlBC,UAAY,SAACC,GACjBF,SAASD,MAAMI,OAAOD,EAAEE,OAAOC,OACjC,EAEQC,SAAW,SAACJ,GAChBF,SAASD,MAAMI,OAAOD,EAAEE,OAAOG,WACjC,EAEMC,WAAa,WACbT,MAAMU,WAAW,MAEdT,SAASD,MAAM,IAExB,EAEMW,YAAc,SAACR,GACnBF,SAASD,MAAMI,OAAOD,EAAEE,OAAOC,OAAOM,WACxC,EAEMC,YAAc,SAAdA,cACJ,IACEZ,SAASa,KAAKd,OAAOY,WAGvB,CAFE,MAAOG,OACPd,SAAS,QACX,CAEF,EAEMe,SAAW,WACff,SAAS,GACX,EAEKgB,UAAa,WAAKhB,SAASD,MAAMkB,MAAM,GAAI,GAAG,EACnD,OACA,kEAAKC,UAAU,gBAAe,SAC5B,mEAAKA,UAAU,iBAAgB,UAC/B,kEAAKA,UAAU,UAAS,SAAEnB,QACxB,qEAAQmB,UAAU,SAASC,QAASJ,SAAS,gBAC7C,qEAAQG,UAAU,SAASC,QAASH,UAAU,eAC9C,qEAAQE,UAAU,SAAQb,MAAM,IAAGc,QAASlB,UAAU,iBACtD,qEAAQiB,UAAU,SAASC,QAASX,WAAW,eAC/C,qEAAQU,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASb,MAAM,IAAIc,QAAST,YAAY,eAC1D,qEAAQQ,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASb,SAAS,eAC7C,qEAAQY,UAAU,SAASC,QAASP,YAAY,mBAItD,CAEef,yB,iCCrEf,uCAKMuB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,IAAG,M","file":"static/js/main.eacddb8a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport \"./styles.css\";\n\nfunction App() {\n  const [input, setInput] = useState('');\n\n//PlusMinus function\nconst plusMinus = (e)=>{\n  setInput(input.concat(e.target.value))\n}\n //Input function\n  const numValue = (e) =>{\n    setInput(input.concat(e.target.innerText))\n  };\n  //Percentage function\n  const numPercent = () =>{\n    if (input.startsWith('%')) {\n      return\n    } else{setInput(input/100) }\n    \n  }\n  //Mulitiplication funtion\n  const numMultiply = (e) =>{\n    setInput(input.concat(e.target.value).toString())   \n  }\n  //Calculation\n  const calculation = () =>{\n    try {\n      setInput(eval(input).toString())\n    } catch (error) {\n      setInput('error');\n    }\n\n  }\n  //All-clear function\n  const allClear = () => {\n    setInput('')\n  };\n  //Backspace funtion\n const backSpace =  ()=>{setInput(input.slice(0, -1))}\n  return (\n  <div className='app-container'>\n    <div className='calc-container'>\n    <div className='display'>{input}</div>\n      <button className='button' onClick={allClear}>AC</button>\n      <button className='button' onClick={backSpace}>C</button>\n      <button className='button'value='-'onClick={plusMinus}>+/-</button>\n      <button className='button' onClick={numPercent}>%</button>\n      <button className='button' onClick={numValue}>/</button>\n      <button className='button' onClick={numValue}>7</button>\n      <button className='button' onClick={numValue}>8</button>\n      <button className='button' onClick={numValue}>9</button>\n      <button className='button' value='*' onClick={numMultiply}>X</button>\n      <button className='button' onClick={numValue}>4</button>\n      <button className='button' onClick={numValue}>5</button>\n      <button className='button' onClick={numValue}>6</button>\n      <button className='button' onClick={numValue}>-</button>\n      <button className='button' onClick={numValue}>1</button>\n      <button className='button' onClick={numValue}>2</button>    \n      <button className='button' onClick={numValue}>3</button>\n      <button className='button' onClick={numValue}>+</button>\n      <button className='button' onClick={numValue}>0</button>\n      <button className='button' onClick={numValue}>.</button>\n      <button className='button' onClick={calculation}>=</button>\n     </div>\n  </div>\n  )\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}